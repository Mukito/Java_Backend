1
00:00:02,820 --> 00:00:04,620
E aí galera beleza.

2
00:00:04,770 --> 00:00:10,680
Agora que a gente fez o teste de unidade a gente precisa testar uma coisa que é muito importante que

3
00:00:10,740 --> 00:00:15,180
os nossos controles garantir que eles estão funcionando.

4
00:00:15,270 --> 00:00:22,500
Tanto acontece eu peguei nosso último projeto e fiz o seguinte eu criei uma classe que produto tem nada

5
00:00:22,500 --> 00:00:28,830
de mais dentro dela só cria uma classe pode ter algumas coisas como ter nome quantidade de valor acréscimo

6
00:00:29,820 --> 00:00:36,510
essa classe Produto ela tem uns Z3 e C3 e ela tem que o método calcular o valor total da quantidade

7
00:00:36,510 --> 00:00:42,810
multiplica por um valor sobre um acréscimo descontam o desconto uma classe tinha é bem simples nada

8
00:00:42,810 --> 00:00:43,980
demais.

9
00:00:44,130 --> 00:00:53,250
é aí que nós vamos fazer o seguinte na classe produtos que eu vou criar um controle para esse produto

10
00:00:53,250 --> 00:00:59,730
então criei aqui um controle do produto controle e não tem nada dentro dele e eu vim aqui dentro da

11
00:00:59,730 --> 00:01:03,500
classe Test criou uma faixa de controle que eu tenho controle a taxa.

12
00:01:03,570 --> 00:01:08,580
Então beleza então está aqui eu vou criar um Controller para o produto vamos fingir que a gente vai

13
00:01:08,580 --> 00:01:10,060
querer uma API de produto.

14
00:01:10,090 --> 00:01:12,300
Qual é a primeira coisa que eu preciso testar.

15
00:01:12,300 --> 00:01:19,260
Bom se eu for testar a unidade então aqui dentro do Model eu criaria os testes de produto então eu já

16
00:01:19,260 --> 00:01:26,640
creio que os testes de produto como eu já ensinei para vocês os testes através de comissão eu fiz o

17
00:01:26,650 --> 00:01:29,270
que os testes de produto para adiantar.

18
00:01:29,280 --> 00:01:35,490
Então fiz um teste que deve calcular o valor total do produto o que eu fiz instancia classe Produto

19
00:01:35,940 --> 00:01:42,570
passei para dentro dele todas as propriedades necessárias na quantidade de desconto acréscimo no valor

20
00:01:43,890 --> 00:01:46,050
resultado que eu esperava.

21
00:01:46,050 --> 00:01:52,140
Fiz a minha ação e aqui o meu acerte beleza é um teste conforme o que a gente já aprendeu que como são

22
00:01:52,140 --> 00:01:55,050
a mesma coisa só que eu fiz aqui para validar esse produto.

23
00:01:55,050 --> 00:01:56,010
Nada demais.

24
00:01:56,100 --> 00:01:56,490
Beleza.

25
00:01:56,490 --> 00:02:02,600
Fiz o teste de produto mas precisamos testar o nosso controle como que nós vamos testar isso.

26
00:02:02,730 --> 00:02:04,800
Bom pra gente testar o controle.

27
00:02:04,860 --> 00:02:10,860
A primeira coisa que a gente precisa fazer é ter o mínimo necessário dentro desse controle para que

28
00:02:10,860 --> 00:02:17,040
a gente consiga fazer com que esse controle tenha tudo o que precisa para ele testar.

29
00:02:17,040 --> 00:02:20,490
Então vou só criar aqui alguns métodos aqui só vou botar o.

30
00:02:22,620 --> 00:02:27,330
Puxa mais sei que de reconhecimento vou chamar o reconhecimento do nosso controle.

31
00:02:27,810 --> 00:02:35,520
Vou criar aqui Barra a barra pessoas lembra que a gente está pensando em ter bebê antes do controle

32
00:02:35,610 --> 00:02:36,810
mesmo existir.

33
00:02:36,810 --> 00:02:38,320
Nós vamos criar ele.

34
00:02:38,340 --> 00:02:39,120
Beleza.

35
00:02:39,120 --> 00:02:44,000
Como não tenho serviço Não tenho nada eu vou simplesmente só criar os métodos aqui.

36
00:02:44,260 --> 00:02:44,790
PUBLIQUE.

37
00:02:47,590 --> 00:02:59,870
Esse método aqui vai me retornar um Response com recheio consciente de que Dilma liste de quê.

38
00:03:00,070 --> 00:03:04,640
De produto de uma lista de produtos.

39
00:03:04,780 --> 00:03:12,880
E aí aquilo que eu vou fazer vou chamar esse cara de obter todos e obter todos para vir aqui ou importar

40
00:03:12,880 --> 00:03:19,590
esse lixo de Java útil Vou importar o produto de dentro do modelo que o que eu vou fazer aqui fazer

41
00:03:19,600 --> 00:03:27,160
se quiser retornar um tio Rei liste de.

42
00:03:28,260 --> 00:03:33,570
Produto mais tão célere isso que eu vou fazer.

43
00:03:33,650 --> 00:03:37,940
Por que eu tenho que ter o mínimo necessário para executar o teste certo.

44
00:03:37,940 --> 00:03:41,740
Só que aqui ele não retorna só uma lista de retorno Response.

45
00:03:41,750 --> 00:03:45,290
Então como fazer isso aqui não uma reli este.

46
00:03:47,110 --> 00:03:51,030
Eu vou chamar isso de esses produtos vai receber sua.

47
00:03:53,370 --> 00:04:03,390
Apesar de dizer que isso aqui é um lixo um lixo de produto um lixo de produto ou chamas de produtos

48
00:04:03,400 --> 00:04:09,900
ai o que eu vou retornar retornei e eu respondo que titia

49
00:04:13,180 --> 00:04:21,480
consciente onde eu vou retornar produtos vírgula http: estados.

50
00:04:21,690 --> 00:04:23,130
Ponto.

51
00:04:23,130 --> 00:04:31,830
Ok certo como se fosse uma consulta de produtos não implementem nada ainda é só um método Zen o mínimo

52
00:04:31,830 --> 00:04:38,550
necessário para conseguir executar o teste que eu vou botar arroba Get MAP.

53
00:04:38,640 --> 00:04:42,390
Então vou fazer isso para obter todos.

54
00:04:42,390 --> 00:04:50,010
Vou fazer um para o obter por aí que aqui vai receber uma idia Não vou botar aqui.

55
00:04:53,960 --> 00:05:02,340
Barra dia e aqui vai se obter por obter por aí.

56
00:05:02,600 --> 00:05:07,270
Ele vai receber um arroba variable.

57
00:05:07,760 --> 00:05:09,440
O produto.

58
00:05:09,440 --> 00:05:12,540
Vamos ver qual é o produto o ideal Long.

59
00:05:12,540 --> 00:05:21,850
Então vamos lá a gente vai fazer aqui assim o long and now captura o ID do produto.

60
00:05:22,030 --> 00:05:27,320
E aqui eu vou simular que eu estou devolvendo o que eu estou devolvendo um produto.

61
00:05:27,320 --> 00:05:34,640
Geralmente o produto a gente não devolve a gente devolve um Opteron um opcional de produtos não importa

62
00:05:34,700 --> 00:05:38,020
se opte por um produto.

63
00:05:38,190 --> 00:05:44,150
é aí que eu vou fingir que eu estou criando um produto e que não vou fazer.

64
00:05:44,150 --> 00:05:54,950
Eu vou criar aqui um óptimo nome de produto habitacional que vai receber o que 1 mil Option não.

65
00:05:57,450 --> 00:06:01,390
é óbvio mas eu não precisava nem vou fazer aqui para ficar fácil.

66
00:06:01,400 --> 00:06:02,410
Meu objetivo.

67
00:06:04,910 --> 00:06:07,030
Um óptimo ponto.

68
00:06:09,950 --> 00:06:12,710
Operacional Vita Partner teclado.

69
00:06:13,940 --> 00:06:16,490
Union Option ponto.

70
00:06:18,130 --> 00:06:20,530
OP O ponto.

71
00:06:21,230 --> 00:06:23,440
Posso dizer de que eu estou criando.

72
00:06:23,450 --> 00:06:26,480
Eu vou dizer que isso aqui é o de um New.

73
00:06:28,490 --> 00:06:29,020
Produto.

74
00:06:31,750 --> 00:06:32,490
Resultou.

75
00:06:35,550 --> 00:06:38,550
SHOW DE BOLA Show.

76
00:06:40,550 --> 00:06:41,120
Beleza.

77
00:06:43,030 --> 00:06:44,980
Isso aqui é estático não preciso fazer isso.

78
00:06:46,460 --> 00:06:47,720
Isso daqui também.

79
00:06:50,210 --> 00:06:53,090
Escola o vigor estático.

80
00:06:53,090 --> 00:06:57,000
Beleza então aqui eu estou criando um óptimo produto para poder devolver.

81
00:06:57,020 --> 00:07:00,120
E aqui eu estou devolvendo o produto.

82
00:07:00,230 --> 00:07:06,680
Beleza então é o mínimo necessário aqui para a gente poder testar o obter por aí diz.

83
00:07:06,860 --> 00:07:08,540
Vou criar aqui um.

84
00:07:10,610 --> 00:07:11,230
Adicionar.

85
00:07:14,440 --> 00:07:17,270
A adicionar que vai receber aqui.

86
00:07:19,560 --> 00:07:33,450
Um arroba reconhece que eu vou chamar de produto do tipo produto e aí aqui o que eu vou fazer quando

87
00:07:33,450 --> 00:07:39,170
eu for cadastrar um produto que não vai devolver um óptimo vou devolver só o produto em si.

88
00:07:39,360 --> 00:07:42,180
Então o que eu vou fazer aqui.

89
00:07:42,620 --> 00:07:44,540
Sei que tem um espaço.

90
00:07:44,800 --> 00:07:47,940
Eu vou simplesmente devolver.

91
00:07:48,150 --> 00:07:57,240
Sei que vou tirar o telescópio porque eu estou só um novo produto beleza e aí é que o chamamos de produto

92
00:07:59,100 --> 00:08:00,240
produto pronto.

93
00:08:00,360 --> 00:08:06,180
Estou devolvendo um produto atá esse produto aqui.

94
00:08:06,210 --> 00:08:09,030
Na verdade eu não preciso nem fazer isso não vou devolver o mesmo objeto.

95
00:08:09,030 --> 00:08:10,050
Na verdade nem precisa.

96
00:08:10,410 --> 00:08:13,830
O que eu estou recebendo aqui eu estou devolvendo beleza o mínimo necessário.

97
00:08:13,830 --> 00:08:15,610
Não preciso de implementação.

98
00:08:15,750 --> 00:08:20,390
Beleza é para cadastrar não é um GET e um post.

99
00:08:20,590 --> 00:08:21,000
Então é um.

100
00:08:21,860 --> 00:08:29,470
Bom este post mapping é não tem parâmetro aqui.

101
00:08:29,750 --> 00:08:36,830
Beleza está aqui bonito um post que recebe os dados por outro produto ele finge que vai cadastrar e

102
00:08:36,830 --> 00:08:43,100
devolve o show de bola criou o mínimo necessário para poder fazer aqui o caso de teste e agora o que

103
00:08:43,100 --> 00:08:43,790
eu faço.

104
00:08:43,790 --> 00:08:50,600
Bom o que eu faço agora é o seguinte aqui no nosso projeto de teste mas vamos mexer nele um pouquinho

105
00:08:51,800 --> 00:08:55,440
olha só pra gente poder testar um controle.

106
00:08:55,610 --> 00:08:56,570
Nós vamos usar.

107
00:08:56,750 --> 00:09:03,260
Nós não vamos usar essa notação aqui pois essa notação aqui é Spring Butt Test.

108
00:09:03,290 --> 00:09:10,310
Nós não vamos usá la mas vamos usar uma outra votação então por aqui nós vamos usar a seguinte anotação

109
00:09:10,560 --> 00:09:20,480
arroba o web MVC teste que eu estou testando um projeto MVC ou uma API aqui dentro nós vamos usar três

110
00:09:20,480 --> 00:09:21,570
coisas diferentes.

111
00:09:21,590 --> 00:09:24,860
Nós fomos a um cara chamado Mock MVC.

112
00:09:26,720 --> 00:09:36,090
E assim acontecer nós vamos usar um cara chamado Mosquito e nós vamos usar um cara chamado mote Beleza.

113
00:09:36,170 --> 00:09:43,700
Primeiramente o que é bom humor que é quando a gente está criando um objeto fictício de alguma coisa

114
00:09:43,700 --> 00:09:45,920
pra gente poder utilizar em prol de um teste.

115
00:09:45,920 --> 00:09:53,660
Por exemplo eu vou fingir que eu quero testar produto criar um teste aonde eu preciso de um produto

116
00:09:53,990 --> 00:09:59,210
eu não preciso realmente no banco de dados pegar um produto simplesmente eu posso criar um produto fictício

117
00:09:59,210 --> 00:10:05,040
e testar por ali esse produto fictício que serve somente para teste ou para alguma coisa do tipo.

118
00:10:05,060 --> 00:10:06,260
A gente chama ele de.

119
00:10:06,440 --> 00:10:12,350
é como se fosse uma template algo fácil para a gente poder utilizar sem precisar acessar um dado real.

120
00:10:15,130 --> 00:10:19,380
Beleza então esses três caras que nós vamos usar no teste bom.

121
00:10:19,450 --> 00:10:26,050
A primeira coisa que nós vamos fazer é o seguinte se eu vou testar o controle de produto.

122
00:10:26,080 --> 00:10:27,990
A primeira coisa que eu tenho que fazer é fazer o quê.

123
00:10:28,010 --> 00:10:36,540
Importar esse cara que prevê este produto controle que eu vou chamar de produto controle.

124
00:10:36,710 --> 00:10:43,410
Aí é que está aqui e aí para importar isso automaticamente eu vou usar o autor lá vou pedir para o Spring

125
00:10:43,420 --> 00:10:45,030
fazer isso pra gente.

126
00:10:45,070 --> 00:10:46,020
Show de bola.

127
00:10:46,090 --> 00:10:49,420
Queria que o meu produto controle para eu poder começar a testar.

128
00:10:50,140 --> 00:10:59,470
Segunda coisa que eu vou precisar aqui é criar uma configuração que seja executada antes de cada caso

129
00:10:59,470 --> 00:10:59,920
de teste.

130
00:10:59,920 --> 00:11:00,430
Por quê.

131
00:11:00,850 --> 00:11:08,230
O meu controle tem outros casos aqui o post e Get por aí é de todos ou seja tem três até agora.

132
00:11:08,230 --> 00:11:15,000
Então eu quero criar uma configuração inicial que sirva para todos os casos de teste aqui.

133
00:11:15,610 --> 00:11:26,530
Beleza então o que eu vou fazer eu vou simplesmente usar um cara chamado moleque MVC para poder tocar

134
00:11:26,540 --> 00:11:30,370
essa brincadeira aqui eu vamos fazer o seguinte eu vou querer um cara que chamado private.

135
00:11:32,710 --> 00:11:42,000
Mock MVC que eu vou chamar de Mock MVC e é esse cara que eu também vou dar um salto hard.

136
00:11:46,090 --> 00:11:50,560
Ao todo eu quero que o Spring inicie esse cara para mim beleza.

137
00:11:50,740 --> 00:11:52,650
Não quero que ninguém disse esse cara.

138
00:11:52,720 --> 00:11:58,290
é aí que eu vou criar um caso de um método chamado public.

139
00:11:58,300 --> 00:12:01,940
Ele vai ser Floyd e eu vou chamar de setup porque vai ser um caso de teste.

140
00:12:01,960 --> 00:12:04,900
Vai ser um método foi executado antes de todos os testes.

141
00:12:05,620 --> 00:12:13,570
Aqui será executado antes de qualquer caso de teste.

142
00:12:13,570 --> 00:12:19,060
Isso me garante fazer aqui dentro preparações específicas para os casos de teste então se todo o caso

143
00:12:19,060 --> 00:12:22,900
de teste lá depende de alguma coisa eu posso botar aqui dentro.

144
00:12:22,900 --> 00:12:27,560
Esse cara que vai ser executado antes de todos eles como que o Spring sabe isso.

145
00:12:27,580 --> 00:12:35,020
Através dessa notação aqui arroba before it Quando eu boto a notação arroba before it Eu estou dizendo

146
00:12:35,020 --> 00:12:43,150
que esse cara esse método aqui tem que ser executado antes de cada caso de teste antes de cada caso

147
00:12:43,160 --> 00:12:46,020
de teste tem que executar esse método aqui.

148
00:12:46,060 --> 00:12:50,980
Então quando nós colocamos o before it significa que esse método vai ser executado antes de cada caso

149
00:12:50,980 --> 00:12:51,790
de teste.

150
00:12:51,790 --> 00:12:56,930
Então se eu tiver que fazer alguma coisa antes de cada caso de teste eu vou colocar aqui dentro.

151
00:12:57,070 --> 00:13:00,370
Vou começar a criar para o nosso primeiro teste para a gente poder entender.

152
00:13:00,370 --> 00:13:06,780
Olha só vão pensar em um teste para que ele controle todo que vote.

153
00:13:06,880 --> 00:13:14,590
Se eu vou testar um choque com o primeiro e o controle com o primeiro método que tem obter todos que

154
00:13:14,590 --> 00:13:19,270
ele devolve uma lista com o status ok.

155
00:13:19,270 --> 00:13:20,590
Esse é o objetivo.

156
00:13:20,590 --> 00:13:28,300
Então a primeira coisa que vou fazer é que o botão aqui que não é o ok sei lá Bad reconhece estados

157
00:13:28,300 --> 00:13:31,210
que não é ok ok ok.

158
00:13:31,220 --> 00:13:33,820
Bad reconhece aí o que eu vou fazer.

159
00:13:33,820 --> 00:13:35,080
Eu vou vir aqui e vou fazer.

160
00:13:35,170 --> 00:13:35,770
Deve

161
00:13:38,230 --> 00:13:46,940
deve retornar aos Estados 200 Vanderlei.

162
00:13:47,110 --> 00:13:48,920
Ok.

163
00:13:49,420 --> 00:14:00,800
Ao obter todos os produtos esse vai ser o nosso caso de teste.

164
00:14:01,000 --> 00:14:01,740
Beleza.

165
00:14:01,870 --> 00:14:05,940
é para dizer que no caso de teste a gente vem aqui a nota com arroba teste.

166
00:14:06,280 --> 00:14:11,520
Quando eu coloco a arroba teste ele já entendeu que o caso de teste eu já consigo executar.

167
00:14:11,650 --> 00:14:14,070
Beleza então por enquanto isso.

168
00:14:14,150 --> 00:14:19,360
Então a primeira coisa que eu quero testar é o método que retorna todos os produtos obter todos.

169
00:14:19,360 --> 00:14:27,670
Se eu quisesse poderia fazer assim deve retornar estátuas de 200 ao chamar.

170
00:14:27,730 --> 00:14:38,080
Ao chamar o método hobby obter todos.

171
00:14:38,830 --> 00:14:46,840
Deve retornar ao status 200 OK ao chamar o método obter todos beleza e aí é que dentro eu vou fazer

172
00:14:46,990 --> 00:14:52,750
o quê eu vou fazer os 3 aí que é realmente né.

173
00:14:53,020 --> 00:14:58,300
Vou fazer o A e vou fazer o quê.

174
00:14:58,840 --> 00:15:01,280
Ou acerte.

175
00:15:01,410 --> 00:15:18,820
Beleza aqui é a nossa preparação aqui a nossa ação ou a palavra nossa aqui e aqui a confirmar são preparação

176
00:15:18,820 --> 00:15:19,900
ação e confirmação.

177
00:15:19,930 --> 00:15:26,530
Beleza então eu tenho 3 3 opções aqui pra poder pra poder gerar esse método de teste com base no DDD

178
00:15:26,920 --> 00:15:32,350
com base no DDD antes mesmo de eu ter o método funcionando o que o mínimo necessário para poder testar

179
00:15:32,350 --> 00:15:33,050
ele.

180
00:15:33,130 --> 00:15:41,340
O show de bola que eu vou fazer eu tenho que dar um jeito de chamar o controller simulam uma requisição.

181
00:15:41,370 --> 00:15:45,840
Então como que eu vou chamar isso eu chamo isso através do modo que me vc.

182
00:15:45,880 --> 00:15:50,800
O mal que me vc é um cara que sabe simular requisição.

183
00:15:50,800 --> 00:15:55,160
Olha que legal ele consegue simular requisição pra gente com base em alguma coisa.

184
00:15:55,240 --> 00:15:58,650
Então ele vai buscar pra simular requisição.

185
00:15:58,960 --> 00:16:03,880
Então o que eu vou fazer aqui dentro eu quero que todo o caso de teste chama se aqui primeiro eu quero

186
00:16:03,880 --> 00:16:09,880
dizer que diz Mock e vc vai receber um cara aqui eu vou escrever aqui vou explicar o que ele faz ele

187
00:16:09,880 --> 00:16:17,180
vai receber um rock M vc Builder.

188
00:16:17,230 --> 00:16:24,300
Esse cara que esse cara aqui que me recebeu diz ele vem dentro desse pacote é hora de expandir femme

189
00:16:24,340 --> 00:16:27,770
porque teste o cérebro pode ser maior que vc biologia.

190
00:16:27,970 --> 00:16:33,600
O que esse cara faz isso é que é uma classe que só que tem poderes mágicos né.

191
00:16:33,670 --> 00:16:35,660
Ela consegue.

192
00:16:36,010 --> 00:16:43,540
Tipo locar um controle específico pra você conseguir usar ele de forma.

193
00:16:44,940 --> 00:16:51,720
A fazer aquisição então ele tem um método que chamado standalone Setup que espera receber um Controller

194
00:16:51,720 --> 00:16:56,430
para ele tocar qual é o controle a que eu quero buscar para ele simular requisição para mim que eu não

195
00:16:56,430 --> 00:16:59,060
vou ter que um cliente fazendo uma requisição HTTP.

196
00:16:59,060 --> 00:17:01,620
Eu não tenho que dar um jeito de simular isso.

197
00:17:01,710 --> 00:17:04,150
Quem que vai se mudar isso para mim estar aqui.

198
00:17:04,200 --> 00:17:10,440
Então eu estou usando esse cara aqui para construir um mock MVC através do meu produto controle.

199
00:17:11,340 --> 00:17:15,780
Até aqui nada demais ah esse cara aqui é um build.

200
00:17:15,780 --> 00:17:20,670
Então eu tenho que vim aqui fazer Build a eu chamo ele e Bild.

201
00:17:20,670 --> 00:17:27,350
Agora o meu box ver se está pronto ou seja esse cara aqui vai saber fazer requisição.

202
00:17:27,360 --> 00:17:30,460
Olha que legal ele vai conseguir fazer requisição.

203
00:17:30,480 --> 00:17:33,380
Então qual vai ser a primeira coisa que nós vamos fazer.

204
00:17:33,390 --> 00:17:40,260
Bom a primeira coisa que nós vamos fazer e isso é que eu vou preparar o meu ambiente.

205
00:17:40,530 --> 00:17:42,480
Eu vou preparar o meu ambiente.

206
00:17:42,480 --> 00:17:45,180
Então o que eu vou fazer eu vou fazer isso que liste.

207
00:17:48,970 --> 00:17:51,640
Liste pessoa.

208
00:17:54,370 --> 00:18:07,280
Pessoas recebe um nível a Rui Rei chip de que não é pessoa não é produto não é o xerife sou produtor

209
00:18:07,330 --> 00:18:17,830
de produtos com listas de produtos e aqui eu vou dizer que há produtos e que eu vou distanciar esse

210
00:18:17,830 --> 00:18:18,940
cara.

211
00:18:18,940 --> 00:18:26,390
Então a gente importa que importa o modelo importa a realidade.

212
00:18:26,440 --> 00:18:34,860
Beleza então aqui na preparação eu tenho esse cara que por enquanto o pão é produto não produtos beleza

213
00:18:35,440 --> 00:18:37,000
ou tapioca a preparação.

214
00:18:37,030 --> 00:18:41,380
A primeira coisa que eu preciso fazer agora eu preciso fazer ação.

215
00:18:41,380 --> 00:18:47,630
A preparação e o que eu espero receber uma lista de produtos e os estoques ok.

216
00:18:47,710 --> 00:18:52,260
Então o que que eu vou fazer que eu vou fazer assim como eu faço ação.

217
00:18:52,330 --> 00:18:56,830
Eu posso simplesmente fazer isso daqui.

218
00:18:57,040 --> 00:19:07,060
Existe um cara chamado Toque MVC que é maior que MVC reconhece Builder.

219
00:19:07,660 --> 00:19:12,550
São os baixos que MVC MVC reconhece Builder.

220
00:19:13,060 --> 00:19:22,090
Eu disse que a gente vai usar o mote MVC o mosquito é o mote show são o mote MVC é o que a gente está

221
00:19:22,090 --> 00:19:23,060
usando aqui.

222
00:19:23,110 --> 00:19:28,310
Esse cara que ele sabe fazer requisição e ele sabe testar requisição pra gente beleza.

223
00:19:28,510 --> 00:19:30,460
Então esse cara sabe fazer.

224
00:19:30,460 --> 00:19:34,990
Só que ele cara não sabe o que você quer fazer de requisição.

225
00:19:34,990 --> 00:19:42,250
é esse cara aqui Mock MVC reconhece Builder é um construtor de requisição você usa ele para criar uma

226
00:19:42,250 --> 00:19:42,910
requisição.

227
00:19:42,910 --> 00:19:45,170
Então o que eu vou fazer eu vou fazer que vá.

228
00:19:45,190 --> 00:19:53,720
EU VOU CHAMAR ISSO AQUI DE reconhece Builder recebe o nome que vc Builder.

229
00:19:53,890 --> 00:19:54,850
Ponto.

230
00:19:54,850 --> 00:20:00,280
E aí esse cara aqui é como se eu estivesse dentro do Insomniac ou do Pochmann fazendo requisição.

231
00:20:00,610 --> 00:20:07,540
Ele tem Get ele tem puxa ele tem puxa ele tem demite ele tem todos os métodos HTTP eu quero fazer um

232
00:20:07,930 --> 00:20:09,420
GET.

233
00:20:09,430 --> 00:20:13,830
E aí ele recebe dois parâmetros que é o RL e as variáveis.

234
00:20:13,930 --> 00:20:19,630
Só que ele tem um Overlord que só recebe um parâmetro que é a URL e a qual ele vai acessar.

235
00:20:19,630 --> 00:20:28,060
Então eu quero que ele vá para onde eu quero que ele vá pra Barra API Barra produtos não é o que nós

236
00:20:28,060 --> 00:20:29,800
colocamos aqui.

237
00:20:29,890 --> 00:20:33,990
O povo tem pessoas os produtos com.

238
00:20:35,100 --> 00:20:40,400
Dos produtos eu quero que venham para essa Mariana que eu vou ter copiado.

239
00:20:40,670 --> 00:20:47,690
Quero que ele faça uma requisição para Cao que é muito vivo então este que o cara quis usar e saber

240
00:20:47,690 --> 00:20:53,750
na verdade que fica em cima desculpa isso vem aqui na preparação ainda que ou ainda preparando a ação

241
00:20:53,750 --> 00:20:56,060
vai acontecer agora o que a ação.

242
00:20:58,140 --> 00:21:04,860
Esse cara que eu estou criando a requisição é como se eu estivesse lá no Pochmann ou lá no sombra criando

243
00:21:04,860 --> 00:21:07,400
ela mas não cliquei incêndio para enviar.

244
00:21:07,500 --> 00:21:10,380
é como se eu tivesse só criou uma estrutura dela e estivesse lá.

245
00:21:10,440 --> 00:21:15,540
Agora eu preciso enviar ela como que eu enviei a ela eu vou enviar através desse cara o que eu falei

246
00:21:15,540 --> 00:21:16,820
que ele sabe fazer.

247
00:21:16,860 --> 00:21:21,870
Então como é que eu faço isso faço assim diz ponto maior que vc.

248
00:21:21,990 --> 00:21:30,270
Ponto ele tem um método chamado perform o método performing é um método que sabe executar esse método

249
00:21:30,270 --> 00:21:33,990
aqui é como se eu tivesse clicando no botão Send para poder enviar.

250
00:21:33,990 --> 00:21:41,520
é como se eu tivesse aqui uma requisição qualquer aqui estivesse clicando aqui incêndio tá clicando

251
00:21:41,520 --> 00:21:48,120
aqui sente quando clica aqui sente exatamente o que esse método que faz perform ele espera receber um

252
00:21:48,120 --> 00:21:50,270
reconhece Builder como parâmetro.

253
00:21:50,430 --> 00:21:57,780
E aí o que esse cara faz toda requisição quando você faz vê algum pega uma requisição qualquer um gate

254
00:21:58,140 --> 00:22:05,940
sei lá um carioca que eu pego um geral aqui em geral geral obterem o endereço pelo CEP tem um CEP qualquer

255
00:22:05,940 --> 00:22:08,070
aqui está pronto.

256
00:22:08,070 --> 00:22:15,250
Se eu der um sem ele executa e me dá um retorno certo ele já executa e já dá um retorno certo.

257
00:22:15,330 --> 00:22:21,780
Então esse cara que faz a mesma coisa o performer executa é como se eu estivesse clicando em Send e

258
00:22:21,780 --> 00:22:23,580
ele tem um cara aqui chamado.

259
00:22:23,940 --> 00:22:26,460
Como ele é um Builder ele tem um cara aqui chamado End

260
00:22:29,520 --> 00:22:30,870
smart como performing

261
00:22:33,610 --> 00:22:39,690
promotor End expert experts.

262
00:22:43,220 --> 00:22:46,610
Que está todo ruim aqui reconhece Bill deixou o PSB jogar para cá.

263
00:22:49,150 --> 00:22:49,420
Sou.

264
00:22:50,250 --> 00:22:52,790
Vamos botar aqui de novo estava escrito errado.

265
00:22:52,800 --> 00:22:57,940
Ponto onde é que se pede o fim de expediente.

266
00:22:58,140 --> 00:23:00,270
Ele é o retorno.

267
00:23:00,270 --> 00:23:04,670
é como se fosse essa telinha que é o retorno e o meter.

268
00:23:04,680 --> 00:23:06,220
Isso aqui é um redesenho.

269
00:23:06,270 --> 00:23:14,190
é o que ele retorna e aqui dentro eu consigo brincar eu consigo receber um mecha e através desse retorno

270
00:23:14,490 --> 00:23:16,780
eu consigo saber o que tem vindo a ser retorno.

271
00:23:16,860 --> 00:23:24,210
O retorno aqui vem dentro de um objeto chamado mó que como a gente está buscando tudo MVC

272
00:23:27,510 --> 00:23:33,440
mete esse cara que o que MVC resulte.

273
00:23:33,480 --> 00:23:37,880
Então esse é o cara que faz um retorno e aqui dentro só botar um ponto eu tenho tudo o que vem na riqueza

274
00:23:37,900 --> 00:23:48,390
só eu tenho o status eu tenho contente eu tenho se vendia is on tá tudo o que o que o renda ou o Ryder

275
00:23:48,990 --> 00:23:51,030
o modem ou o reconhece já viu.

276
00:23:51,030 --> 00:23:53,470
Eu tenho tudo o que acontece na requisição.

277
00:23:53,490 --> 00:23:54,350
Então o que eu quero.

278
00:23:54,390 --> 00:24:03,810
Eu vou pegar o status do que vier e quero ficar e verificar se esse status é ok e Bad reconhece e criei

279
00:24:05,160 --> 00:24:05,930
certo.

280
00:24:06,000 --> 00:24:13,320
Então eu vou te dizer que é ok melhor eu vou dizer que eu quero comparar com isso.

281
00:24:18,020 --> 00:24:23,520
Vou deixar como isso ok mesmo ok que é o que eu espero e espero que ele seja ok.

282
00:24:24,260 --> 00:24:28,520
Espero que ele seja Ok então eu vou executar.

283
00:24:28,520 --> 00:24:30,530
O que isso vai acontecer.

284
00:24:30,530 --> 00:24:35,660
Isso aqui vai fazer o seguinte o cara é o que todo mundo a.

285
00:24:35,780 --> 00:24:40,370
Quando eu boto aqui ele está falando o seguinte cara isso é que pode dar uma exceção.

286
00:24:40,410 --> 00:24:42,170
Isso que pode acontecer o mais certo.

287
00:24:42,530 --> 00:24:44,630
Ele avisa que pode acontecer o mais céptico.

288
00:24:44,690 --> 00:24:48,940
Então ele te indica a você adicionar um.

289
00:24:54,690 --> 00:24:55,520
Não é isso aqui.

290
00:24:55,890 --> 00:24:57,780
Querem nos trazer.

291
00:24:57,810 --> 00:25:01,940
Achei que ele ia fazer o que eu queria frisou que para isso é só voltar aqui.

292
00:25:02,010 --> 00:25:03,300
Ele não botou o que eu queria.

293
00:25:11,070 --> 00:25:21,830
Trouxe excepto o trouxa céptico o que significa significa que esse cara pode retornar uma exceção e

294
00:25:21,840 --> 00:25:27,600
aí para não dar problema ele indica você colocar uma exceção aqui quando você diz que isso aqui pode

295
00:25:27,600 --> 00:25:32,460
lançar uma exceção significa que esse método de teste vai estar preparado com mais céptico.

296
00:25:32,510 --> 00:25:34,800
E aí é que acontece uma coisa muito legal.

297
00:25:34,800 --> 00:25:35,460
Por quê.

298
00:25:35,460 --> 00:25:44,150
Porque nesse método acontece tanto a ação quanto o acerto acontece as duas coisas ao mesmo tempo.

299
00:25:44,230 --> 00:25:50,400
Aqui eu estou enviando essa parte de baixo faz parte daqui porque é um ponto ou não tem ponto e vírgula

300
00:25:50,400 --> 00:25:54,940
para terminar um Builder e ele já faz a confirmação do que está acontecendo aqui.

301
00:25:54,990 --> 00:25:59,070
Eu não estou nem precisando aqui desse produto vou deixar o comentado aqui por enquanto.

302
00:25:59,070 --> 00:26:05,410
Olha só eu crio um cara chamado Mo que reconhece Builder que sabe fazer um GET para o RL.

303
00:26:05,520 --> 00:26:07,140
Ele faz isso.

304
00:26:07,320 --> 00:26:12,810
Ele sabe fazer e prepara um box de uma requisição.

305
00:26:12,810 --> 00:26:17,580
E aí eu chamo o método que vc que o cara que eu queria que ensina o que está buscando nosso controle

306
00:26:17,580 --> 00:26:24,870
ou seja no momento que chama o Performer é como se ele estivesse enviando um send para dentro desse

307
00:26:24,870 --> 00:26:31,080
controle era aqui passando essa o ENIAC ou seja está chegando aqui dentro.

308
00:26:31,560 --> 00:26:36,660
Chegando aqui dentro e aí aqui dentro ele vai tomar uma ação com a ação que eu quero que ele tome eu

309
00:26:36,660 --> 00:26:48,390
quero que ele envie vem aqui tipo clique em Send enviou do retorno eu Eu sempre recebo um toque de resumo

310
00:26:48,400 --> 00:26:53,520
ok me vc resulte MET e aí é que eu retorno de tudo aquilo que o controle me devolveu.

311
00:26:53,520 --> 00:27:00,230
Então o que esse Controller devolver aqui é que ele devolver aqui vai chegar aqui.

312
00:27:00,300 --> 00:27:03,170
Aí eu só captura o status e verifiquei se é ok.

313
00:27:03,210 --> 00:27:08,610
Esse teste tem que falhar por que ele tem que falhar porque é que eu estou esperando é o meu método

314
00:27:08,610 --> 00:27:11,080
que eu disse que é um bad reconhece.

315
00:27:11,090 --> 00:27:12,990
Então vamos testar ouvir que vou rodar.

316
00:27:22,810 --> 00:27:25,820
Está executando ela falhou.

317
00:27:25,840 --> 00:27:28,760
Esperava 200 OK e deu 400.

318
00:27:28,870 --> 00:27:30,720
Perfeito significa que o quê.

319
00:27:30,730 --> 00:27:33,940
O meu teste falhou a primeira fase do DDD.

320
00:27:33,940 --> 00:27:40,510
Agora o que a gente faz agora a gente bota o nosso teste pra pra passar.

321
00:27:40,510 --> 00:27:42,460
Então vamos botar Bad repete.

322
00:27:43,870 --> 00:27:47,650
A gente bota para passar para testar as duas partes se ele passa a ser falha.

323
00:27:51,580 --> 00:27:52,660
Ele tem que passar agora.

324
00:27:55,860 --> 00:27:59,760
O verde passou significa que o nosso teste está certo.

325
00:27:59,760 --> 00:28:04,000
Então agora o que o Cunha faz agora fazer rir e faturar o código.

326
00:28:04,020 --> 00:28:09,570
Então eu veria que é realmente o o que ele deveria fazer isso.

327
00:28:10,080 --> 00:28:11,130
Opa.

328
00:28:11,330 --> 00:28:13,600
Ok ok.

329
00:28:13,680 --> 00:28:17,730
Ou seja agora ele tem que devolver um OK que é o que eu espero que ele devolva.

330
00:28:17,820 --> 00:28:19,980
Eu ainda não fiz a implementação.

331
00:28:19,980 --> 00:28:25,140
Agora eu poderia ter feito toda a implementação ter colocado aqui tem que chamar o serviço e aquela

332
00:28:25,140 --> 00:28:27,210
coisa toda mas eu não fiz.

333
00:28:27,210 --> 00:28:29,570
Eu só coloquei assim para ficar fácil.

334
00:28:29,670 --> 00:28:35,740
Ou seja agora eu quero que ele retorne ok eu estou faturando baseado no tererê.

335
00:28:35,880 --> 00:28:38,640
Então agora esse texto tem que falhar por quê.

336
00:28:38,640 --> 00:28:44,100
Porque ele já não retorna mais uns 200 ou que aqui ele não está esperando mais.

337
00:28:44,220 --> 00:28:50,250
Ele tem que falhar aí o fator o teste de novo para passar ou seja tem que falhar agora porque o meu

338
00:28:50,250 --> 00:28:55,590
método lá mudou e bem que a gente vai se testando a mesma coisa quatro vezes e ano voltando voltando

339
00:28:56,490 --> 00:29:00,480
hora eu esperava 400 bem 200 perfeito.

340
00:29:00,480 --> 00:29:07,820
Eu esperava um bad reconhece que é 400 200 que é que significa que está certo e agora eu venho aqui.

341
00:29:08,160 --> 00:29:13,410
O que realmente o meu teste tem que fazer deve retornar a esse status ok.

342
00:29:13,410 --> 00:29:14,130
200.

343
00:29:14,130 --> 00:29:16,370
Ao chamar o método obter todos.

344
00:29:16,500 --> 00:29:20,220
Então agora se vier aqui e clicar o que ele vai fazer.

345
00:29:20,250 --> 00:29:24,970
Ele vai fazer a requisição como esse aqui vai devolver ok.

346
00:29:24,990 --> 00:29:32,190
O meu teste aqui vai passar porque vai chegar o que é que vai funcionar passou.

347
00:29:32,340 --> 00:29:37,200
é o meu primeiro caso de teste de obter todos está funcionando.

348
00:29:37,200 --> 00:29:41,090
Olha que legal está funcionando perfeitamente.

349
00:29:41,120 --> 00:29:41,550
Beleza.
